swagger: "2.0"
info:
  description: "This represents the public REST API for the Board Game Nerd system. You can find more information on its [github project](https://github.com/fragmentados/Board-Game-Nerd-Back)"
  version: "1.0.0"
  title: "Board Game Nerd Public Api"
  contact:
    email: "eliasfb94@hotmail.com"
tags:
  - name: "Games"
    description: "Operations regarding board games"
  - name: "Players"
    description: "Operations regarding players"
  - name: "Plays"
    description: "Operations regarding game plays"
  - name: "Masters"
    description: "Operations regarding master information"
schemes:
  - "https"
  - "http"
paths:
  /games:
    get:
      tags:
        - "Games"
      summary: "Obtains all the games on the collection with their basic info"
      operationId: "getGames"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Game"
    post:
      tags:
        - "Games"
      summary: "Creates a new game"
      operationId: "createGame"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/CreateGame"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
  /games/{gameId}:
    get:
      tags:
        - "Games"
      summary: "Obtains a certain game details by its id"
      operationId: "getGameById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/GameId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GameDetail"
  /players:
    get:
      tags:
        - "Players"
      summary: "Obtains all the players registered with their basic info"
      operationId: "getPlayers"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Player"
  /players/groups:
    get:
      tags:
        - "Players"
      summary: "Obtains all the player groups registered with their basic info"
      operationId: "getPlayerGroups"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/PlayerGroup"
  /players/{playerId}:
    get:
      tags:
        - "Players"
      summary: "Obtains a certain player details by its id"
      operationId: "getPlayerById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/PlayerId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlayerDetail"
  /masters:
    get:
      tags:
        - "Masters"
      summary: "Obtains all the masterinfo"
      operationId: "getMasters"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Masters"
  /plays:
    get:
      tags:
        - "Plays"
      summary: "Obtains all the plays registered with their basic info"
      operationId: "getPlays"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Play"
  /plays/{playId}:
    get:
      tags:
        - "Plays"
      summary: "Obtains a certain play details by its id"
      operationId: "getPlayById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/PlayId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlayDetail"
definitions:
  PlayDetail:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      date:
        type: "string"
        description: "Date in which the play was played in format YYYY-MM-DD"
        example: "2022-07-24"
      players:
        type: array
        items:
          $ref: "#/definitions/PlayDetailPlayer"
      game:
        $ref: "#/definitions/BasicGameInfo"
      scorable:
        type: boolean
        description: Indicates if the corresponding game was scorable so that you can avoid displaying non existing scores
  Play:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      date:
        type: "string"
        description: "Date in which the play was played in format YYYY-MM-DD"
        example: "2022-07-24"
      players:
        type: array
        items:
          $ref: "#/definitions/PlayPlayer"
      game:
        $ref: "#/definitions/BasicGameInfo"
  BasicGameInfo:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Fluxx"
      imageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/fluxx.jpg"
  PlayDetailPlayer:
    properties:
      player:
        $ref: "#/definitions/Player"
      score:
        type: integer
        example: 10
      winner:
        type: boolean
      winPercentage:
        type: number
        format: double
        example: 40.2
      maxScore:
        type: integer
        example: 2000
      avgScore:
        type: integer
        example: 20
  PlayPlayer:
    properties:
      player:
        $ref: "#/definitions/Player"
      score:
        type: integer
        example: 10
      winner:
        type: boolean
  PlayerGroup:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Los caimanes"
      imageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/loscaimanes.jpg"
      players:
        type: array
        items:
          $ref: "#/definitions/Player"
  PlayerDetail:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Samuel"
      imageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/samuel.jpg"
      numPlays:
        type: "integer"
        example: 100
      totalWinPercentage:
        type: "number"
        format: "double"
        description: Average win percentage calculated across all plays
        example: 45.3
      highestPlayScore:
        type: "integer"
        description: Highest score obtained on a single play
        example: 2000
      favouriteGame:
        $ref: "#/definitions/GameStat"
      highestWinRateGame:
        $ref: "#/definitions/GameStat"
      latestPlayedGame:
        $ref: "#/definitions/GameStat"
  GameStat:
    properties:
      gameId:
        type: "integer"
        format: "int32"
        example: 1
      gameName:
        type: "string"
        example: "Fluxx"
      gameImageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/fluxx.jpg"
      value:
        type: "string"
        description: Value of this particular game play stat
        example: "10"
      secondValue:
        type: "string"
        description: Second value of this particular game play stat
        example: "Samuel"
  Player:
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Samuel"
      imageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/samuel.jpg"
      numPlays:
        type: "integer"
        example: 100
  Masters:
    properties:
      themes:
        type: array
        items:
          $ref: "#/definitions/Master"
      complexities:
        type: array
        items:
          $ref: "#/definitions/Master"
      locations:
        type: array
        items:
          $ref: "#/definitions/Master"
      media:
        type: array
        items:
          $ref: "#/definitions/Master"
      styles:
        type: array
        items:
          $ref: "#/definitions/Master"
      victories:
        type: array
        items:
          $ref: "#/definitions/Master"
  GameDetail:
    type: object
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Fluxx"
      description:
        type: "string"
        example: "Simple game where you add upon new rules as you play"
      auxiliarDescription:
        type: "string"
        example: "Rules easily forgotten: Draw 7 cards at the start"
      images:
        type: array
        items:
          $ref: "#/definitions/Image"
      location:
        $ref: "#/definitions/Master"
      complexity:
        type: "string"
        example: "Party"
      style:
        type: "string"
        example: "Player Progression"
      minPlayers:
        type: "integer"
        format: "int32"
        example: 1
      maxPlayers:
        type: "integer"
        format: "int32"
        example: 2
      victory:
        type: "string"
        example: "Cooperativo"
      theme:
        type: "string"
        example: "Abstracto"
      medium:
        type: "string"
        example: "Cartas"
      duration:
        type: "integer"
        description: Average duration in minutes of a play of this game
        example: 30
      scoreInfo:
        $ref: "#/definitions/ScoreInfo"
      rulesUrl:
        type: string
        example: "http://192.168.0.25:8080/rules/NuevaAngeles.pdf"
      isFavorite:
        type: boolean
        example: true
      numPlays:
        type: integer
        example: 10
      expansions:
        $ref: "#/definitions/GameExpansions"
  GameExpansions:
    type: object
    properties:
      percentageOwned:
        type: integer
        example: 89
      content:
        type: array
        items:
          $ref: "#/definitions/GameExpansion"
  GameExpansion:
    type: object
    properties:
      name:
        type: string
        example: "Jagged Earth"
      owned:
        type: boolean
        example: true
  ScoreInfo:
    type: object
    properties:
      scores:
        type: array
        items:
          $ref: "#/definitions/Score"
      avgValue:
        type: "number"
        description: Average score of this game across all categories
        example: 4.2
  Score:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: "Tematica"
      value:
        type: number
        example: 10
  Image:
    type: object
    properties:
      src:
        type: string
        example: "http://192.168.0.25:8080/images/nuevaangeles.jpg"
      thumb:
        type: string
        example: "http://192.168.0.25:8080/images/nuevaangeles.jpg"
  Game:
    type: object
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Fluxx"
      imageUrl:
        type: "string"
        example: "http://192.168.0.25:8080/images/nuevaangeles.jpg"
      location:
        type: "string"
        example: "Baul"
      complexity:
        $ref: "#/definitions/Master"
      minPlayers:
        type: "integer"
        format: "int32"
        example: 1
      maxPlayers:
        type: "integer"
        format: "int32"
        example: 2
      victory:
        type: "string"
        example: "Cooperativo"
      theme:
        type: "string"
        example: "Abstracto"
      medium:
        type: "string"
        example: "Cartas"
      duration:
        type: "integer"
        description: Average duration in minutes of a play of this game
        example: 30
      avgScore:
        type: "number"
        description: Average score of this game across all categories
        example: 4.2
      featuresDisabled:
        type: array
        items:
          $ref: "#/definitions/Feature"
        example: [RANDOM_GAME]
      isFavorite:
        type: boolean
        example: true
      numPlays:
        type: integer
        example: 10
      playedBy:
        type: array
        description: Player names of players that have played this game at least once
        items:
          type: string
        example: ["Samuel"]
  Feature:
    type: string
    description: Represents possible features of the system that can be disabled on certain games
    enum:
      - RANDOM_GAME
  Master:
    type: object
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "Party"
  Response:
    type: object
    properties:
      errorCode:
        type: integer
        example: 0
      entityId:
        type: integer
      message:
        type: string
parameters:
  PlayId:
    in: path
    name: playId
    required: true
    description: A play's id
    type: integer
  PlayerId:
    in: path
    name: playerId
    required: true
    description: A player's id
    type: integer
  GameId:
    in: path
    name: gameId
    required: true
    description: A game's id
    type: integer
  CreateGame:
    in: body
    name: createGame
    required: true
    description: The game about to be created
    schema:
      properties:
        name:
          type: "string"
          example: "Fluxx"
        description:
          type: "string"
          example: "Simple game where you add upon new rules as you play"
        minPlayers:
          type: "integer"
          format: "int32"
          example: 1
        maxPlayers:
          type: "integer"
          format: "int32"
          example: 2
        themeId:
          type: "integer"
          example: 1
        complexityId:
          type: "integer"
          example: 1
        locationId:
          type: "integer"
          example: 1
        mediumId:
          type: "integer"
          example: 1
        styleId:
          type: "integer"
          example: 1
        victoryId:
          type: "integer"
          example: 1
        duration:
          type: "integer"
          description: Average duration in minutes of a play of this game
          example: 30